type AwsEc2Instance {
   instanceId: String
   imageId: String
   state: String
   privateDnsName: String
   publicDnsName: String
   stateTransitionReason: String
   keyName: String
   amiLaunchIndex: Int
   instanceType: String
   kernelId: String
   ramdiskId: String
   platform: String
   subnetId: String
   vpcId: String
   privateIpAddress: String
   publicIpAddress: String
   architecture: String
   rootDeviceType: String
   rootDeviceName: String
   virtualizationType: String
   instanceLifecycle: String
   spotInstanceRequestId: String
   clientToken: String
   sourceDestCheck: Boolean
   hypervisor: String
   ebsOptimized: Boolean
   sriovNetSupport: String
   enaSupport: Boolean
   productCodes: [String]
   launchTime: String
   placement: String
   monitoring: String
   stateReason: String
   blockDeviceMappings: [String]
   securityGroups: [String]
   networkInterfaces: [String]
   iamInstanceProfile: String
   tags: [AwsTag]
 }

input InputAwsEc2Instance {
    instanceId: String
    imageId: String
    state: String
    privateDnsName: String
    publicDnsName: String
    stateTransitionReason: String
    keyName: String
    amiLaunchIndex: Int
    instanceType: String
    kernelId: String
    ramdiskId: String
    platform: String
    subnetId: String
    vpcId: String
    privateIpAddress: String
    publicIpAddress: String
    architecture: String
    rootDeviceType: String
    rootDeviceName: String
    virtualizationType: String
    instanceLifecycle: String
    spotInstanceRequestId: String
    clientToken: String
    sourceDestCheck: Boolean
    hypervisor: String
    ebsOptimized: Boolean
    sriovNetSupport: String
    enaSupport: Boolean
    productCodes: [String]
    launchTime: String
    placement: String
    monitoring: String
    stateReason: String
    blockDeviceMappings: [String]
    securityGroups: [String]
    networkInterfaces: [String]
    iamInstanceProfile: String
    inputTags: [InputAwsTag]
}

input AwsEc2InstanceFilter {
    contains: InputAwsEc2Instance
}

